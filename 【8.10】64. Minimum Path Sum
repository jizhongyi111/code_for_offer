//折腾了好久，TM竟然因为数组越界！！

//思考：动态规划解题，初始化第一行，第一列，然后result[i][j]=min(result[i-1][j]+grid[i][j],result[i][j-1]+grid[i][j]),也就是其他点上的值
//要么从左边来，要么从上边来。

int minPathSum(vector<vector<int>>& grid) {
    int row = grid.size();
    int col = grid[0].size(); 
    vector< vector<int> >  result(row);
    for (int i = 0; i <row; i++)
    result[i].resize(col,0);//设置数组的大小m行，n列    
	result[0][0] = grid[0][0];
	for (int i=1;i<col;i++)
		result[0][i]=result[0][i-1]+grid[0][i];
    for (int i=1;i<row;i++)
		result[i][0]=result[i-1][0]+grid[i][0];
	for (int i=1;i<row;i++)
		for (int j=1; j<col; j++)
			result[i][j]=min(result[i-1][j]+grid[i][j], result[i][j-1]+ grid[i][j]);
	return result[row-1][col-1];
}
    
