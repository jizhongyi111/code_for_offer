   //问题实质上是求不相邻最大和，递推式为money[i]=max(money[i-2]+nums[i],money[i-1])
   //对每一家而言，要么偷，要么不偷，所以有两种选择，所以才有了最大值判断。
   int rob(vector<int>& nums) {
    
    vector<int> money(nums.size()+1);
	int i;
	int result;
	if (nums.size() == 0) return 0;
	if (nums.size() == 1) return nums[0];
	if (nums.size() == 2) return max(nums[0],nums[1]);
	else
	{
        money[0] = nums[0];
		money[1] = max(money[0],nums[1]);
        for ( i = 2; i < nums.size(); i++)
		{
			money[i] = max(money[i - 2] + nums[i], money[i - 1]);
		}
		result = max(money[nums.size() - 1], money[nums.size() - 2]);
		return result;
	}
    }
